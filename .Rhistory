RetriveInfoFromPmids <- function(pmids, apiKey){
infoFromPMIDs <- sapply(pmids, GetInfoFromPmid, apiKey = apiKey)
return(UrlFromPMIDs)
}
a <- RetriveInfoFromPmids(pmids)
a <- RetriveInfoFromPmids(pmids,"")
RetriveInfoFromPmids <- function(pmids, apiKey){
infoFromPMIDs <- sapply(pmids, GetInfoFromPmid, apiKey = apiKey)
return(infoFromPMIDs)
}
a <- RetriveInfoFromPmids(pmids,"")
View(a)
View(a)
a <- RetriveInfoFromPmids(pmids,"")
View(a)
source('~/workspace/tools_pubmedTools/R/example1.R')
pmids <- c("11748933", "29041955")
urls <-  RetriveUrlsFromPmids(pmids)
pmids <- c("11748933", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
urls <-  RetriveUrlsFromPmids(pmids, apiKey)
View(urls)
info <-  RetriveInfoFromPmids(pmcid, apiKey)
info <-  RetriveInfoFromPmids(pmids, apiKey)
View(info)
pmid
GetInfoFromPmid(pmid, "")
content <- GetEfetchContentFromPmid(pmid, apiKey)
if(is.null(content)) {return (NULL)}
doc <- xmlTreeParse(content, encoding="UTF-8", useInternalNodes = TRUE)
journal <- RetriveXmlNodeValuefromDoc(doc,  "//Journal//Title")
journalCountry <- RetriveXmlNodeValuefromDoc(doc,  "//MedlineJournalInfo//Country")
publicationYear <- RetriveXmlNodeValuefromDoc(doc,  "//JournalIssue//PubDate//Year")
authors <- do.call(rbind, xpathApply(doc, "//Author", function(node)
{
forename <- xmlValue(node[["ForeName"]])
lastname <- xmlValue(node[["LastName"]])
return(paste(forename, lastname))
}))
authors <- paste(authors, collapse = ", ")
affiliation <- RetriveXmlNodeValuefromDoc(doc,  "//Affiliation")
myData <- data.frame(
journal = journal,
journalCountry = journalCountry,
publicationYear = publicationYear,
authors = authors,
affiliation = affiliation
)
View(myData)
GetInfoFromPmid(pmid,apiKey)
infoFromPMIDs <- sapply(pmids, GetInfoFromPmid, apiKey = apiKey)
infoFromPMIDs
source('~/workspace/tools_pubmedTools/R/example1.R')
source('~/workspace/tools_pubmedTools/R/example1.R')
source('~/workspace/tools_pubmedTools/R/example1.R')
print(info)
View(info)
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
info <-  RetriveInfoFromPmids(pmids, apiKey)
print(info)
View(info)
# install.packages("devtools")
# library(devtools)
install_github("shihikoo/pubmedTools")
# install.packages("devtools")
# library(devtools)
github.install("shihikoo/pubmedTools")
# install.packages("devtools")
# library(devtools)
install_github("shihikoo/pubmedTools")
githubinstall("pubmedTools")
install.packages("githubinstall")
githubinstall("pubmedTools")
library(githubinstall)
githubinstall("pubmedTools")
install_github("shihikoo/pubmedTools")
source('~/workspace/tools_pubmedTools/R/example1.R')
# library(githubinstall)
install_github("shihikoo/pubmedTools")
# library(devtools)
install_github("shihikoo/pubmedTools")
# library(devtools)
install_github("shihikoo/pubmedTools")
library(parallel)
library(doParallel)
ncores <- detectCores(all.tests = FALSE, logical = TRUE)
#'
#' @return a list of characters. A list of urls. Return fulltext urls if fulltext parameter is T.
#' Return NULL if none is found.
#' @export
#'
#' @examples pmids <- c("28852052", "29041955")
#' apiKey <- ""
#' urls <-  RetriveUrlsFromPmidsParallel(pmids, apiKey)
#' print(urls)
#'
RetriveUrlsFromPmidsParallel <- function(pmids, apiKey, fulltext = T){
ncores <- detectCores(all.tests = FALSE, logical = TRUE)
cl <- makeCluster(round(ncores), outfile="") #determines how many parallel processes are used for the pdf downloading
registerDoParallel(cl)
urlFromPMIDs <- foreach(i=1:length(pmids), .packages=c('GetUrlsFromPmid')) %dopar% {
GetUrlsFromPmid(pmids[i], fulltext = fulltext)
}
return(urlFromPMIDs)
}
RetriveUrlsFromPmidsParallel(pmids,apiKey)
#'
#' @return a list of characters. A list of urls. Return fulltext urls if fulltext parameter is T.
#' Return NULL if none is found.
#' @export
#'
#' @examples pmids <- c("28852052", "29041955")
#' apiKey <- ""
#' urls <-  RetriveUrlsFromPmidsParallel(pmids, apiKey)
#' print(urls)
#'
RetriveUrlsFromPmidsParallel <- function(pmids, apiKey, fulltext = T){
ncores <- detectCores(all.tests = FALSE, logical = TRUE)
cl <- makeCluster(round(ncores), outfile="") #determines how many parallel processes are used for the pdf downloading
registerDoParallel(cl)
urlFromPMIDs <- foreach(i=1:length(pmids), .packages=c('GetUrlsFromPmid')) %dopar% {
GetUrlsFromPmid(pmids[i], apiKey, fulltext = fulltext)
}
return(urlFromPMIDs)
}
RetriveUrlsFromPmidsParallel(pmids,apiKey)
#'
#' @return a list of characters. A list of urls. Return fulltext urls if fulltext parameter is T.
#' Return NULL if none is found.
#' @export
#'
#' @examples pmids <- c("28852052", "29041955")
#' apiKey <- ""
#' urls <-  RetriveUrlsFromPmidsParallel(pmids, apiKey)
#' print(urls)
#'
RetriveUrlsFromPmidsParallel <- function(pmids, apiKey, fulltext = T){
ncores <- detectCores(all.tests = FALSE, logical = TRUE)
cl <- makeCluster(round(ncores), outfile="") #determines how many parallel processes are used for the pdf downloading
registerDoParallel(cl)
urlFromPMIDs <- foreach(i=1:length(pmids), .packages=c('GetUrlsFromPmid')) %dopar% {
GetUrlsFromPmid(pmids[i], apiKey, fulltext = fulltext)
}
return(urlFromPMIDs)
}
RetriveUrlsFromPmidsParallel(pmids,apiKey)
install.packages(c("devtools", "roxygen2", "testthat", "knitr"))
# library(devtools)
install_github("shihikoo/pubmedTools")
devtools::load_all(".")
devtools::load_all(".")
install.packages("linter")
install.packages("lintr")
# library(devtools)
install_github("shihikoo/pubmedTools")
# library(devtools)
install_github("shihikoo/pubmedTools")
options("download.file.method" = "libcurl")
# library(devtools)
install_github("shihikoo/pubmedTools")
result <- fromJSON(file = "configure.json")
apiKey <- result$APIKey
print(apiKey)
pmids <- c("11748933", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
urls <-  RetriveUrlsFromPmids(pmids, apiKey)
print(urls)
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
info <-  RetriveInfoFromPmids(pmids, apiKey)
info
class(info)
View(info)
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
as.data.frame(info)
a <- as.data.frame(info)
View(a)
tr(info)
t(info)
a <- as.data.frame(t(info))
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
metaData <-  RetriveMetaDataFromPmids(pmids, apiKey)
print(metaData)
View(metaData)
roxygenise()
roxygen2::roxygenise()
roxygen2::roxygenise()
library(pubmedTools)
options("download.file.method" = "libcurl")
devtools::install_github("shihikoo/pubmedTools")
result <- fromJSON(file = "configure.json")
apiKey <- result$APIKey
print(apiKey)
pmids <- c("11748933", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
urls <-  pubmedTools::RetriveUrlsFromPmids(pmids, apiKey)
print(urls)
metaData <-  pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey)
print(metaData)
metaData <-  pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey)
print(metaData)
metaData <-  pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey)
print(metaData)
pmids <- c("28852052", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
urls <-  pubmedTools::RetriveUrlsFromPmids(pmids, apiKey)
print(urls)
metaData <-  pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey)
print(metaData)
# library(httr)
# library(XML)
# library(foreach)
# library(doParallel)
# library(parallel)
# library(rjson)
# source('R/pubmedRead.R')
options("download.file.method" = "libcurl")
devtools::install_github("shihikoo/pubmedTools")
result <- fromJSON(file = "configure.json")
apiKey <- result$APIKey
pmids <- c("28852052", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
urls <-  pubmedTools::RetriveUrlsFromPmids(pmids, apiKey)
print(urls)
metaData <-  pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey)
print(metaData)
metaData <-  pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey)
print(metaData)
urls <-  pubmedTools::RetriveUrlsFromPmids(pmids, apiKey)
print(urls)
metaData <-  pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey)
print(metaData)
source('~/workspace/tools_pubmedTools/example/example1.R')
source('~/workspace/tools_pubmedTools/example/example1.R')
source('~/workspace/tools_pubmedTools/example/example1.R')
# library(httr)
# library(XML)
# library(foreach)
# library(doParallel)
# library(parallel)
# library(rjson)
# source('R/pubmedRead.R')
options("download.file.method" = "libcurl")
devtools::install_github("shihikoo/pubmedTools")
result <- fromJSON(file = "configure.json")
apiKey <- result$APIKey
pmids <- c("28852052", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
source('~/workspace/tools_pubmedTools/example/example1.R')
source('~/workspace/tools_pubmedTools/example/example1.R')
metaData <-  pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey)
print(metaData)
metaData <-  pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey)
print(metaData)
#' @param email a string of characters. The API Key obtained through NCBI account
#'
#' @return a list of metaDatarmation retrived from PubMed
#' @export
#'
#' @examples pmid <- "28852052"
#' apiKey <- ""
#' metaData <-  GetMetaDataFromPmid(pmid, apiKey)
#' print(metaData)
#'
GetMetaDataFromPmid <- function(pmid, apiKey,email){
GetEfetchContentFromPmid <- function(pmid, apiKey){
links <- GetBaselink("pubmed", pmid, apiKey)
content <- GetContentWithLink(links["EfetcLink"])
return(content)
}
content <- GetEfetchContentFromPmid(pmid, apiKey)
if(is.null(content)) {return (NULL)}
doc <- xmlTreeParse(content, encoding="UTF-8", useInternalNodes = TRUE)
journal <- RetriveXmlNodeValuefromDoc(doc,  "//Journal//Title")
journalCountry <- RetriveXmlNodeValuefromDoc(doc,  "//MedlineJournalInfo//Country")
publicationYear <- RetriveXmlNodeValuefromDoc(doc,  "//JournalIssue//PubDate//Year")
authors <- do.call(rbind, xpathApply(doc, "//Author", function(node)
{
forename <- xmlValue(node[["ForeName"]])
lastname <- xmlValue(node[["LastName"]])
return(paste(forename, lastname))
}))
authors <- paste(authors, collapse = ", ")
affiliation <- RetriveXmlNodeValuefromDoc(doc,  "//Affiliation")
myData <- data.frame(
journal = journal,
journalCountry = journalCountry,
publicationYear = publicationYear,
authors = authors,
affiliation = affiliation,
stringsAsFactors = F
)
return(myData)
}
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
source('~/workspace/tools_pubmedTools/example/example1.R')
roxygen2::roxygenise()
metaData <-  pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey,email)
print(GetPmidDoiFromPmcid(pmcid))
print(GetPmidDoiFromPmcid(pmcid), apiKey,email)
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
print(GetPmidDoiFromPmcid(pmcid), apiKey,email)
result <- fromJSON(file = "configure.json")
apiKey <- result$APIKey
email <- "shihikoo@gmail.com"
pmids <- c("28852052", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
email <- "shihikoo@gmail.com"
print(GetPmidDoiFromPmcid(pmcid), apiKey,email)
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
print(GetPmidDoiFromPmcid(pmcid), apiKey,email)
print(GetPmidDoiFromPmcid(pmcid, apiKey,email))
print(GetPmidDoiFromPmcid(pmcid, apiKey,email))
print(pubmedTools::RetriveUrlsFromPmids(pmids, apiKey,email))
print(pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey,email))
source('~/workspace/tools_pubmedTools/example/example1.R')
options("download.file.method" = "libcurl")
devtools::install_github("shihikoo/pubmedTools")
result <- fromJSON(file = "configure.json")
source('~/workspace/tools_pubmedTools/example/example1.R')
options("download.file.method" = "libcurl")
devtools::install_github("shihikoo/pubmedTools")
library(pubmedTools)
options("download.file.method" = "libcurl")
devtools::install_github("shihikoo/pubmedTools")
library(pubmedTools)
devtools::install_github("shihikoo/pubmedTools", force=T)
library(pubmedTools)
result <- fromJSON(file = "configure.json")
apiKey <- result$APIKey
email <- "shihikoo@gmail.com"
pmids <- c("28852052", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
email <- "shihikoo@gmail.com"
print(pubmedTools::GetPmidDoiFromPmcid(pmcid, apiKey,email))
print(pubmedTools::RetriveUrlsFromPmids(pmids, apiKey,email))
print(pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey,email))
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
print(pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey,email))
print(RetriveMetaDataFromPmids(pmids, apiKey,email))
library(pubmedTools)
devtools::install_github("shihikoo/pubmedTools")
devtools::install_github("shihikoo/pubmedTools")
devtools::install_github("shihikoo/pubmedTools", force = T)
library(pubmedTools)
View(RetriveMetaDataFromPmids)
View(pubmedTools::RetriveMetaDataFromPmids)
library(pubmedTools)
source('~/workspace/tools_pubmedTools/example/example1.R')
print(pubmedTools::GetPmidDoiFromPmcid(pmcid, apiKey,email))
print(pubmedTools::RetriveUrlsFromPmids(pmids, apiKey,email))
print(pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey,email))
library(pubmedTools)
options("download.file.method" = "libcurl")
devtools::install_github("shihikoo/pubmedTools")
devtools::install_github("shihikoo/pubmedTools")
result <- fromJSON(file = "configure.json")
apiKey <- result$APIKey
pmids <- c("28852052", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
email <- "shihikoo@gmail.com"
email <- "shihikoo@gmail.com"
print(pubmedTools::GetPmidDoiFromPmcid(pmcid, apiKey,email))
devtools::install_github("shihikoo/pubmedTools")
print(pubmedTools::GetPmidDoiFromPmcid(pmcid, apiKey,email))
print(pubmedTools::RetriveUrlsFromPmids(pmids, apiKey,email))
source('~/workspace/tools_pubmedTools/example/example1.R')
source('~/workspace/tools_pubmedTools/example/example1.R')
source('~/workspace/tools_pubmedTools/example/example1.R')
options("download.file.method" = "libcurl")
devtools::install_github("shihikoo/pubmedTools")
library(pubmedTools)
result <- httr::fromJSON(file = "configure.json")
apiKey <- result$APIKey
email <- "shihikoo@gmail.com"
pmids <- c("28852052", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
print(pubmedTools::GetPmidDoiFromPmcid(pmcid, apiKey,email))
remove.packages("pubmedTools", lib="~/workspace/tools_pubmedTools/packrat/lib/x86_64-pc-linux-gnu/3.4.4")
options("download.file.method" = "libcurl")
devtools::install_github("shihikoo/pubmedTools")
library(pubmedTools)
result <- httr::fromJSON(file = "configure.json")
apiKey <- result$APIKey
email <- "shihikoo@gmail.com"
pmids <- c("28852052", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
email <- "shihikoo@gmail.com"
print(pubmedTools::GetPmidDoiFromPmcid(pmcid, apiKey,email))
library(pubmedTools)
result <- rjson::fromJSON(file = "configure.json")
apiKey <- result$APIKey
email <- "shihikoo@gmail.com"
pmids <- c("28852052", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
email <- "shihikoo@gmail.com"
print(pubmedTools::GetPmidDoiFromPmcid(pmcid, apiKey,email))
print(pubmedTools::RetriveUrlsFromPmids(pmids, apiKey,email))
print(pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey,email))
source('~/workspace/tools_pubmedTools/example/example1.R')
print(GetPmidDoiFromPmcid(pmcid, apiKey,email))
pmcid
apiKey
email
print(pubmedTools::GetPmidDoiFromPmcid(pmcid, apiKey,email))
print(pubmedTools::RetriveUrlsFromPmids(pmids, apiKey,email))
print(pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey,email))
print(GetPmidDoiFromPmcid(pmcid, apiKey,email))
# library(httr)
# library(XML)
# library(foreach)
# library(doParallel)
# library(parallel)
# library(rjson)
source('R/pubmedRead.R')
print(GetPmidDoiFromPmcid(pmcid, apiKey,email))
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
print(GetPmidDoiFromPmcid(pmcid, apiKey,email))
source('~/workspace/tools_pubmedTools/example/example1.R')
source('R/pubmedRead.R')
print(GetPmidDoiFromPmcid(pmcid, apiKey,email))
print(RetriveUrlsFromPmids(pmids, apiKey,email))
print(RetriveMetaDataFromPmids(pmids, apiKey,email))
source('R/pubmedRead.R')
print(GetPmidDoiFromPmcid(pmcid, apiKey,email))
print(RetriveUrlsFromPmids(pmids, apiKey,email))
print(RetriveMetaDataFromPmids(pmids, apiKey,email))
print(RetriveMetaDataFromPmids(pmids, apiKey,email))
options("download.file.method" = "libcurl")
devtools::install_github("shihikoo/pubmedTools")
print(pubmedTools::GetPmidDoiFromPmcid(pmcid, apiKey,email))
print(pubmedTools::RetriveUrlsFromPmids(pmids, apiKey,email))
print(pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey,email))
source('R/pubmedRead.R')
print(GetPmidDoiFromPmcid(pmcid, apiKey,email))
source('~/workspace/tools_pubmedTools/example/example1.R')
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
source('~/workspace/tools_pubmedTools/example/example1.R')
source('~/workspace/tools_pubmedTools/example/example1.R')
source('~/workspace/tools_pubmedTools/example/example1.R')
source('~/workspace/tools_pubmedTools/example/example1.R')
link <- "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/efetch.fcgi?db=pubmed&id=29041955&retmode=xml&api_key=2ab938c0c3cfbfe6446b544c8e37c5a4e609&email=shihikoo@gmail.com"
r0 <- GET(as.character(link))
r0 <- httr::GET(as.character(link))
content <- content(r0, "text")
content <- httr::content(r0, "text")
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
r0 <- base::GET(as.character(link))
result <- rjson::fromJSON(file = "configure.json")
email <- "shihikoo@gmail.com"
apiKey <- result$APIKey
pmids <- c("28852052", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
email <- "shihikoo@gmail.com"
apiKey <- rjson::fromJSON(file = "configure.json")$APIKey
apiKey <- rjson::fromJSON(file = "configure.json")$APIKey
email <- "shihikoo@gmail.com"
pmids <- c("28852052", "29041955")
pmid <- pmids[1]
pmcid <- "4804230"
email <- "shihikoo@gmail.com"
options("download.file.method" = "libcurl")
devtools::install_github("shihikoo/pubmedTools", force = T)
print(pubmedTools::GetPmidDoiFromPmcid(pmcid, apiKey,email))
print(pubmedTools::RetriveUrlsFromPmids(pmids, apiKey,email))
print(pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey,email))
link
GetBaselink <- function(db,id, apiKey = "", email = ""){
baseUrl <- "https://eutils.ncbi.nlm.nih.gov/entrez/eutils/"
links <- data.frame(
ELinkURLsLink = paste0(baseUrl, "elink.fcgi?dbfrom=",db,"&cmd=llinks&id=",id),
EfetcLink = paste0(baseUrl, "efetch.fcgi?db=",db,"&id=",id,"&retmode=xml"),
EsummaryLink = paste0(baseUrl, "esummary.fcgi?db=",db,"&id=",id),
stringsAsFactors = F
)
if(apiKey != "") links <- sapply(links, function(x)  paste0(x, "&api_key=",apiKey))
if(email != "") links <- sapply(links, function(x)  paste0(x, "&email=",email))
return(links)
}
GetBaselink("pubmed",pmid,apiKey,email)
library(httr)
links <- GetBaselink("pubmed",pmid,apiKey,email)
r0 <- GET(links["EsummaryLink"])
content <- content(r0,"text")
doc <- xmlTreeParse(content, encoding="UTF-8", useInternalNodes = TRUE)
library(XML)
pmid <- RetriveXmlNodeValuefromDoc(doc, "//Item[@Name='pmid']")
doc <- xmlTreeParse(content, encoding="UTF-8", useInternalNodes = TRUE)
pmid <- RetriveXmlNodeValuefromDoc(doc, "//Item[@Name='pmid']")
source('~/workspace/tools_pubmedTools/R/pubmedRead.R')
pmid <- RetriveXmlNodeValuefromDoc(doc, "//Item[@Name='pmid']")
GetPmidDoiFromPmcid(pmcid, apiKey, email)
GetPmidDoiFromPmcid(pmcid, apiKey,email)
GetPmidDoiFromPmcid(pmcid, apiKey, email)
GetPmidDoiFromPmcid(pmcid, apiKey,email)
print(pubmedTools::GetPmidDoiFromPmcid(pmcid, apiKey, email))
print(pubmedTools::RetriveUrlsFromPmids(pmids, apiKey, email))
print(pubmedTools::RetriveMetaDataFromPmids(pmids, apiKey, email))
source('~/workspace/tools_pubmedTools/example/example1.R')
source('~/workspace/tools_pubmedTools/example/example1.R')
